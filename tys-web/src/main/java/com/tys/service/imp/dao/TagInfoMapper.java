package com.tys.service.imp.dao;

import com.tys.service.imp.provider.TagInfoSqlProvider;
import com.tys.entity.vo.TagInfo;
import org.apache.ibatis.annotations.*;
import org.apache.ibatis.type.JdbcType;

import java.util.List;
@Mapper
public interface TagInfoMapper {

    @Update({
        "delete from taginfo",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table taginfo
     *
     * @mbggenerated Tue Mar 05 17:55:48 CST 2019
     */
    @Insert({
        "insert into taginfo (tag_type, tag_status, ",
        "tag_content)",
        "values (#{tagType,jdbcType=TINYINT}, #{tagStatus,jdbcType=TINYINT}, ",
        "#{tagContent,jdbcType=VARCHAR})"
    })
    @SelectKey(statement="SELECT LAST_INSERT_ID()", keyProperty="id", before=false, resultType=Integer.class)
    int insert(TagInfo record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table taginfo
     *
     * @mbggenerated Tue Mar 05 17:55:48 CST 2019
     */
    @InsertProvider(type=TagInfoSqlProvider.class, method="insertSelective")
    @SelectKey(statement="SELECT LAST_INSERT_ID()", keyProperty="id", before=false, resultType=Integer.class)
    int insertSelective(TagInfo record);


    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table taginfo
     *
     * @mbggenerated Tue Mar 05 17:55:48 CST 2019
     */
    @Select({
        "select",
        "id, tag_type, tag_status, tag_content",
        "from taginfo",
        "where id = #{id,jdbcType=INTEGER} and status = 1"
    })
    @Results({
        @Result(column="id", property="id", jdbcType= JdbcType.INTEGER, id=true),
        @Result(column="tag_type", property="tagType", jdbcType= JdbcType.TINYINT),
        @Result(column="tag_status", property="tagStatus", jdbcType= JdbcType.TINYINT),
        @Result(column="tag_content", property="tagContent", jdbcType= JdbcType.VARCHAR)
    })
    TagInfo selectByPrimaryKey(Integer id);


    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table taginfo
     *
     * @mbggenerated Tue Mar 05 17:55:48 CST 2019
     */
    @UpdateProvider(type=TagInfoSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(TagInfo record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table taginfo
     *
     * @mbggenerated Tue Mar 05 17:55:48 CST 2019
     */
    @Update({
        "update taginfo",
        "set tag_type = #{tagType,jdbcType=TINYINT},",
          "tag_status = #{tagStatus,jdbcType=TINYINT},",
          "tag_content = #{tagContent,jdbcType=VARCHAR}",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(TagInfo record);

    @SelectProvider(type = TagInfoSqlProvider.class, method = "querySelective")
    @Results({
            @Result(column="id", property="id", jdbcType= JdbcType.INTEGER, id=true),
            @Result(column="tag_type", property="tagType", jdbcType= JdbcType.TINYINT),
            @Result(column="tag_status", property="tagStatus", jdbcType= JdbcType.TINYINT),
            @Result(column="tag_content", property="tagContent", jdbcType= JdbcType.VARCHAR)
    })
    List<TagInfo> querySelective(TagInfo record);
}